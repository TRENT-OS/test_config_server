/*
 * CAmkES configuration file for the ConfigServer test suite.
 *
 * Copyright (C) 2019-2024, HENSOLDT Cyber GmbH
 * 
 * SPDX-License-Identifier: GPL-2.0-or-later
 *
 * For commercial licensing, contact: info.cyber@hensoldt.net
 */


import <std_connector.camkes>;

import "components/TestApp/TestApp.camkes";
import "components/ConfigServer/ConfigServer.camkes";
import "components/ConfigFileInjector/ConfigFileInjector.camkes";

#include "system_config.h"

#include "RamDisk/RamDisk.camkes"
RamDisk_COMPONENT_DEFINE(RamDisk)

assembly {
    composition {
        //----------------------------------------------------------------------
        // ConfigFileInjector
        //----------------------------------------------------------------------
        component ConfigFileInjector configFileInjector;
        connection  seL4RPCCall         configFileInjector_ramDisk             (from configFileInjector.storage_rpc,         to ramDisk.storage_rpc);
        connection  seL4SharedData      configFileInjector_storage_port        (from configFileInjector.storage_port,        to ramDisk.storage_port);

        component   RamDisk             ramDisk;

        //----------------------------------------------------------------------
        // ConfigServer
        //----------------------------------------------------------------------
        component   ConfigServer        configServer;
        component   ConfigServerNoInit  configServerNoInit;

        RamDisk_INSTANCE_CONNECT_CLIENT(
          ramDisk,
          configServer.storage_rpc,
          configServer.storage_port
        )

        connection  seL4RPCCall    configServer_configFileInjector       (from configServer.injector_component,  to configFileInjector.injector_component);


        //----------------------------------------------------------------------
        // TestApp1
        //----------------------------------------------------------------------
        component   TestApp1         testApp1;

        connection  seL4RPCCall      testApp1_configServer          (from testApp1.OS_ConfigServiceServer,      to configServer.OS_ConfigServiceServer);
        connection  seL4SharedData   testApp1_configServer_data     (from testApp1.cfg_port,                    to configServer.cfg_port1);
        connection  seL4RPCCall      testApp1_configFileInjector    (from testApp1.injector_component,          to configFileInjector.injector_component);
        connection  seL4Notification testApp2_testDone              (from testApp1.test_done,                   to testApp2.app1_test_done);
        connection  seL4NotificationNative testApp1_local_testDone  (from testApp1.local_test_done,             to configServer.app1_local_test_done);
        connection  seL4RPCCall      testApp1_ramDisk               (from testApp1.storage_rpc,                 to ramDisk.storage_rpc);
        connection  seL4SharedData   testApp1_storage_port          (from testApp1.storage_port,                to ramDisk.storage_port);



        //----------------------------------------------------------------------
        // TestApp2
        //----------------------------------------------------------------------
        component   TestApp2         testApp2;

        connection  seL4RPCCall      testApp2_configServer       (from testApp2.OS_ConfigServiceServer, to configServer.OS_ConfigServiceServer);
        connection  seL4SharedData   testApp2_configServer_data  (from testApp2.cfg_port, to configServer.cfg_port2);
        connection  seL4Notification testApp3_testDone           (from testApp2.test_done, to testApp3.app2_test_done);


        //----------------------------------------------------------------------
        // TestApp3
        //----------------------------------------------------------------------
        component   TestApp3         testApp3;

        connection  seL4RPCCall      testApp3_configServer       (from testApp3.OS_ConfigServiceServer, to configServer.OS_ConfigServiceServer);
        connection  seL4SharedData   testApp3_configServer_data  (from testApp3.cfg_port, to configServer.cfg_port3);
        connection  seL4Notification testApp4_testDone           (from testApp3.test_done, to testApp4.app3_test_done);


        //----------------------------------------------------------------------
        // TestApp4
        //----------------------------------------------------------------------
        component   TestApp4         testApp4;

        connection  seL4RPCCall      testApp4_configServer       (from testApp4.OS_ConfigServiceServer, to configServer.OS_ConfigServiceServer);
        connection  seL4SharedData   testApp4_configServer_data  (from testApp4.cfg_port, to configServer.cfg_port4);
        connection  seL4Notification testApp1_testDone           (from testApp4.test_done, to testApp1.app4_test_done);

        //----------------------------------------------------------------------
        // TestAppNoServerInit
        //----------------------------------------------------------------------
        component   TestAppNoServerInit         testAppNoServerInit;

        connection  seL4RPCCall      testAppNoServerInit_configServerNoInit (from testAppNoServerInit.OS_ConfigServiceServer, to configServerNoInit.OS_ConfigServiceServer);
        connection  seL4SharedData   testAppNoServerInit_configServer_data  (from testAppNoServerInit.cfg_port, to configServerNoInit.cfg_port);
    }

    configuration {
        // assign an initial semaphore value
        configServer.backend_init_done_value = 0;

        // arbitrary size that should be able to hold the config parameters
        ramDisk.storage_size = (1 * 1024 * 1024);
    }
}
